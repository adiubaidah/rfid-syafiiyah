CREATE TYPE "user_role" AS ENUM (
  'superadmin',
  'admin',
  'employee',
  'parent'
);

CREATE TYPE "gender" AS ENUM (
  'male',
  'female'
);

CREATE TYPE "presence_type" AS ENUM (
  'alpha',
  'permission',
  'sick',
  'late',
  'present'
);

CREATE TYPE "arduino_mode_type" AS ENUM (
  'entry',
  'presence',
  'excuse'
);

CREATE TABLE "user" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "role" user_role,
  "username" varchar(50) UNIQUE,
  "password" varchar(255)
);

CREATE TABLE "holiday" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "color" char(6)
);

CREATE TABLE "holiday_days" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "day" date NOT NULL,
  "holiday_id" int NOT NULL
);

CREATE TABLE "santri_activity" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "description" varchar(255),
  "start_presence" time NOT NULL,
  "start_time" time NOT NULL,
  "finish_time" time NOT NULL
);

CREATE TABLE "santri_occupation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255),
  "description" varchar(255)
);

CREATE TABLE "santri" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nis" char UNIQUE,
  "name" varchar(255) NOT NULL,
  "gender" gender NOT NULL,
  "generation" int NOT NULL,
  "photo" varchar(100),
  "occupation_id" int,
  "parent_id" int
);

CREATE TABLE "parent" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "address" varchar(255) NOT NULL,
  "gender" gender NOT NULL,
  "no_wa" varchar(13),
  "photo" varchar(100),
  "user_id" int
);

CREATE TABLE "rfid" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "uid" char(12) UNIQUE,
  "created_at" timestamp NOT NULL DEFAULT 'now()',
  "is_active" boolean DEFAULT false,
  "santri_id" int,
  "employee_id" int
);

CREATE TABLE "santri_presence" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY,
  "activity_id" int NOT NULL,
  "activity_name" varchar(100) NOT NULL,
  "type" presence_type NOT NULL,
  "santri_id" int NOT NULL,
  "created_at" timestamp,
  "notes" text,
  "santri_permission_id" int
);

CREATE TABLE "santri_permission" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "santri_id" int NOT NULL,
  "start_permission" time NOT NULL DEFAULT 'now()',
  "end_permission" time,
  "excuse" varchar(255) NOT NULL,
  "is_go_home" boolean DEFAULT false
);

CREATE TABLE "employee_occupation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "description" varchar(255)
);

CREATE TABLE "employee" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nip" char(18) UNIQUE,
  "name" varchar(100) NOT NULL,
  "gender" gender NOT NULL,
  "photo" varchar(100),
  "occupation_id" int NOT NULL,
  "user_id" int
);

CREATE TABLE "employee_schedule" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "start_presence" time NOT NULL,
  "start_time" time NOT NULL,
  "finish_time" time NOT NULL
);

CREATE TABLE "employee_presence" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY,
  "schedule_id" int,
  "type" presence_type NOT NULL,
  "employee_id" int NOT NULL,
  "notes" text
);

CREATE TABLE "employee_permission" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "employee_id" int NOT NULL,
  "schedule_id" int NOT NULL,
  "schedule_name" varchar(100) NOT NULL,
  "start_izin" time NOT NULL DEFAULT 'now()',
  "end_izin" time,
  "reason" varchar(255) NOT NULL,
  "is_go_home" boolean
);

CREATE TABLE "arduino" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL
);

CREATE TABLE "arduino_mode" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "mode" arduino_mode_type NOT NULL,
  "topic_publish" varchar(100) NOT NULL,
  "topic_subscribe" varchar(100) NOT NULL,
  "arduino_id" int NOT NULL
);

CREATE INDEX ON "user" ("username");

CREATE INDEX ON "employee" ("name");

COMMENT ON COLUMN "holiday"."name" IS 'Optional description of the holiday';

COMMENT ON COLUMN "santri_activity"."start_time" IS 'Waktu mulai kegiatan';

COMMENT ON COLUMN "santri_activity"."finish_time" IS 'Waktu berakhirnya kegiatan';

COMMENT ON COLUMN "santri"."generation" IS 'ex: 2024, 2022';

COMMENT ON COLUMN "santri"."occupation_id" IS 'awalnya tidak memiliki jabatan';

COMMENT ON COLUMN "santri"."parent_id" IS 'Semua santri bisa memiliki orang tua';

COMMENT ON COLUMN "rfid"."santri_id" IS 'Rfid bisa milik santri';

COMMENT ON COLUMN "rfid"."employee_id" IS 'Rfid bisa milik employee';

COMMENT ON COLUMN "santri_presence"."activity_id" IS 'Karena bisa saja activitynya dihapus';

COMMENT ON COLUMN "santri_presence"."activity_name" IS 'menggunakan name, karena jika activity dihapus, atau diubah maka masih tetap ada presence nya, karena bersifat history';

COMMENT ON COLUMN "santri_presence"."created_at" IS 'Waktu presensi, bisa null karena jika sakit, maka diisi oleh Admin';

COMMENT ON COLUMN "santri_presence"."santri_permission_id" IS 'Jika izin, maka ini diisi';

COMMENT ON COLUMN "santri_permission"."end_permission" IS 'waktu kembali, null berarti pulang';

COMMENT ON COLUMN "santri_permission"."is_go_home" IS 'Pulang, keluar sementara';

COMMENT ON COLUMN "employee_schedule"."name" IS 'ex: Pagi, siang, sore, malam';

COMMENT ON COLUMN "employee_schedule"."start_time" IS 'Waktu jenis';

COMMENT ON COLUMN "employee_permission"."end_izin" IS 'waktu kembali, null berarti pulang';

COMMENT ON COLUMN "employee_permission"."is_go_home" IS 'Pulang, keluar sementara';

COMMENT ON COLUMN "arduino"."name" IS 'ex: arduino1';

ALTER TABLE "holiday_days" ADD FOREIGN KEY ("holiday_id") REFERENCES "holiday" ("id") ON DELETE CASCADE;

ALTER TABLE "santri" ADD FOREIGN KEY ("occupation_id") REFERENCES "santri_occupation" ("id") ON DELETE SET NULL;

ALTER TABLE "santri" ADD FOREIGN KEY ("parent_id") REFERENCES "parent" ("id") ON DELETE SET NULL;

ALTER TABLE "parent" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE SET NULL;

ALTER TABLE "rfid" ADD FOREIGN KEY ("santri_id") REFERENCES "santri" ("id");

ALTER TABLE "rfid" ADD FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "santri_presence" ADD FOREIGN KEY ("santri_id") REFERENCES "santri" ("id");

ALTER TABLE "santri_presence" ADD FOREIGN KEY ("santri_permission_id") REFERENCES "santri_permission" ("id") ON DELETE CASCADE;

ALTER TABLE "santri_permission" ADD FOREIGN KEY ("santri_id") REFERENCES "santri" ("id") ON DELETE CASCADE;

ALTER TABLE "employee" ADD FOREIGN KEY ("occupation_id") REFERENCES "employee_occupation" ("id");

ALTER TABLE "employee" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE SET NULL;

ALTER TABLE "employee_presence" ADD FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE CASCADE;

ALTER TABLE "employee_permission" ADD FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE CASCADE;

ALTER TABLE "arduino_mode" ADD FOREIGN KEY ("arduino_id") REFERENCES "arduino" ("id") ON DELETE CASCADE;
